import NavBar from "@/components/nav/NavBar";
import HeaderVideo from "@/components/header/HeaderVideo";
import RowTour from "@/components/Tour/RowTour ";
import RowDestination from "@/components/destination/RowDestination";
import RowOffers from "@/components/offers/RowOffers";
import Head from "next/head";
import RowGuides from "@/components/guides/RowGuides";
import RequestQuote from "@/components/RequestQuote/RequestQuote";
import Trustus from "@/components/Trustus/Trustus";
import FAQs from "@/components/FAQs/FAQs";
import Footer from "@/components/Footer/Footer";
import { baseUrl, fetchApi } from "../../utils/featchApi";
import Script from "next/script";
import { useEffect, useState } from "react";
import Reviews from "@/components/Reviews/Reviews";

export default function Home({ packages, destinations, wikis, faqs }) {
  const [isloding, setIsloding] = useState(false);

  useEffect(() => {
    setTimeout(() => {
      setIsloding(true);
    }, 10000);
  }, []);
  return (
    <div>
      <Head>
        <title>go elite </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isloding && (
        <Script
          onLoad={() => {
            console.log("Script has loaded");
          }}
          src="https://www.googletagmanager.com/gtag/js?id=GTM-P7GBDH9"
        />
      )}
      {isloding && (
        <Script
          onLoad={() => {
            console.log("Script has ");
          }}
          id="google-analytics"
        >
          {`
             window.dataLayer = window.dataLayer || [];
             function gtag(){dataLayer.push(arguments);}
             gtag('js', new Date());
    
             gtag('config', 'GTM-P7GBDH9');
           `}
        </Script>
      )}
      <NavBar />
      <HeaderVideo />
      <RowTour packages={packages} />
      <RowDestination destinations={destinations} />
      {/* <RowOffers packages={packages} /> */}
      <RowGuides wikis={wikis} />
      <Reviews />
      {/* <RequestQuote /> */}
      {/* <Trustus /> */}
      <FAQs faqs={faqs} />
      <Footer />
    </div>
  );
}
export async function getStaticProps() {
  const packages = await fetchApi(
    `${baseUrl}/packages/?tenant_id=9&language_id=5&&viewInHome=1&status=active`
  );
  const destinations = await fetchApi(
    `${baseUrl}/destinations?tenant_id=9&language_id=5&status=active`
  );
  const wikis = await fetchApi(
    `${baseUrl}/wikis?tenant_id=9&language_id=5&status=active&paginate=5`
  );
  const faqs = await fetchApi(
    `${baseUrl}/faqs?tenant_id=9&language_id=5&viewInHome=1&status=active&paginate=5`
  );
  return {
    props: {
      packages: packages.rows,
      destinations: destinations.rows,
      wikis: wikis.rows,
      faqs: faqs.rows,
    },
    revalidate: 10,
  };
}
