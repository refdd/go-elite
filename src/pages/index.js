import NavBar from "@/components/nav/NavBar";
import HeaderVideo from "@/components/header/HeaderVideo";
import RowTour from "@/components/Tour/RowTour ";
import RowDestination from "@/components/destination/RowDestination";
import Head from "next/head";
import RowGuides from "@/components/guides/RowGuides";
import FAQs from "@/components/FAQs/FAQs";
import Footer from "@/components/Footer/Footer";
import { baseUrl, fetchApi } from "../../utils/featchApi";
import Script from "next/script";
import { useEffect, useState } from "react";
import Reviews from "@/components/Reviews/Reviews";
import SliderHeader from "@/components/SliderHeader/SliderHeader";

export default function Home({
  packages,
  destinations,
  wikis,
  faqs,
  allReviews,
  menus,
  sliders,
  logo,
}) {
  const [isloding, setIsloding] = useState(false);

  useEffect(() => {
    setTimeout(() => {
      setIsloding(true);
    }, 10000);
  }, []);
  console.log(logo);
  return (
    <div>
      <Head>
        <title>go elite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isloding && (
        <Script
          strategy="lazyOnload"
          onLoad={() => {
            console.log("Script has loaded");
          }}
          src="https://www.googletagmanager.com/gtag/js?id=GTM-P7GBDH9"
        />
      )}
      {isloding && (
        <Script
          onLoad={() => {
            console.log("Script has ");
          }}
          strategy="lazyOnload"
          id="google-analytics"
        >
          {`
             window.dataLayer = window.dataLayer || [];
             function gtag(){dataLayer.push(arguments);}
             gtag('js', new Date());
    
             gtag('config', 'GTM-P7GBDH9');
           `}
        </Script>
      )}
      <NavBar menus={menus} logo={logo} />
      {/* <HeaderVideo /> */}
      <SliderHeader sliders={sliders} />
      <RowTour packages={packages} />
      <RowDestination destinations={destinations} />
      <RowGuides wikis={wikis} />
      <Reviews allReviews={allReviews} />
      <FAQs faqs={faqs} />
      <Footer />
    </div>
  );
}
export async function getStaticProps() {
  const packages = await fetchApi(
    `${baseUrl}/packages/?tenant_id=9&language_id=5&&viewInHome=1&status=active&paginate=7`
  );
  const destinations = await fetchApi(
    `${baseUrl}/destinations?tenant_id=9&language_id=5&status=active`
  );
  const wikis = await fetchApi(
    `${baseUrl}/wikis?tenant_id=9&language_id=5&status=active&paginate=5`
  );
  const faqs = await fetchApi(
    `${baseUrl}/faqs?tenant_id=9&language_id=5&viewInHome=1&status=active&paginate=5`
  );
  const allReviews = await fetchApi(
    `${baseUrl}/reviews?tenant_id=9&language_id=5`
  );
  const menus = await fetchApi(`${baseUrl}/menus?tenant_id=9&language_id=5`);
  const sliders = await fetchApi(
    `${baseUrl}/sliders?tenant_id=9&language_id=5&status=active`
  );
  const logo = await fetchApi(
    `${baseUrl}/settings/logo?tenant_id=9&language_id=5`
  );
  return {
    props: {
      packages: packages.rows,
      destinations: destinations.rows,
      wikis: wikis.rows,
      faqs: faqs.rows,
      allReviews: allReviews.rows,
      menus: menus.rows,
      sliders: sliders.rows,
      logo: logo.row,
    },
  };
}
